[19:48:38] INFO [TEST] Using TEST_DATABASE_URL: postgresql://postgres.otjjjagmwzswbinwxmfw:thothpassword@aws-0-us-east-1.pooler.supabase.com:6543/postgres
[19:48:41] INFO [test_upload_file] START
[19:48:41] INFO [registerUser] Registering user: None
[19:48:41] WARNING (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/Users/gadmohamed/Desktop/LMS/.venv/lib/python3.9/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
AttributeError: module 'bcrypt' has no attribute '__about__'
[19:48:42] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[19:48:42] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 440}
[19:48:42] INFO [loginUser] Logging in user: {'username': 'testuser_bf8ac524', 'password': 'testpass123'}
[19:48:43] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[19:48:43] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl9iZjhhYzUyNCIsImV4cCI6MTc0NjIzMzMyMn0.ErPkVoaO4A6z_eC1vFzB44ifIEptuvKxYOuO6FN5h0w', 'token_type': 'bearer'}
[19:48:43] INFO [test_upload_file] Uploading file: testfile.txt
[19:48:43] INFO HTTP Request: POST http://testserver/upload "HTTP/1.1 200 OK"
[19:48:43] INFO [test_upload_file] Response status: 200, body: {'filename': 'testfile.txt', 'size': 11}
[19:48:43] INFO [test_upload_file] END
[19:48:43] INFO HTTP Request: DELETE http://testserver/user/testuser_bf8ac524 "HTTP/1.1 200 OK"
[19:48:43] INFO [test_active_url_success] START
[19:48:43] INFO [test_active_url_success] Payload: {'url': 'https://example.com', 'title': 'Example Page'}
[19:48:43] INFO [/active_url] POST request from testclient, headers: {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '52', 'content-type': 'application/json'}
[19:48:43] INFO [/active_url] Payload: {'url': 'https://example.com', 'title': 'Example Page'}
[19:48:43] INFO [/active_url] Validation: url valid=True
[19:48:43] INFO [/active_url] Validation: title valid=True
[19:48:43] INFO [SERVER] Active URL: https://example.com
[19:48:43] INFO [SERVER] Page title: Example Page
[19:48:43] INFO [/active_url] Responded with status 200: {'data': {'status': 'success'}}
[19:48:43] INFO HTTP Request: POST http://testserver/active_url "HTTP/1.1 200 OK"
[19:48:43] INFO [test_active_url_success] Response status: 200, body: {'data': {'status': 'success'}}
[19:48:43] INFO [test_active_url_success] END
[19:48:43] INFO [test_active_url_missing_url] START
[19:48:43] INFO [test_active_url_missing_url] Payload: {'title': 'Example Page'}
[19:48:43] INFO [/active_url] POST request from testclient, headers: {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '24', 'content-type': 'application/json'}
[19:48:43] INFO [/active_url] Payload: {'title': 'Example Page'}
[19:48:43] INFO [/active_url] Validation: url valid=False
[19:48:43] INFO [/active_url] Validation: title valid=True
[19:48:43] ERROR [/active_url] ERROR: Missing URL | Context: {'endpoint': '/active_url'}
[19:48:43] INFO HTTP Request: POST http://testserver/active_url "HTTP/1.1 400 Bad Request"
[19:48:43] INFO [test_active_url_missing_url] Response status: 400, body: {'error': 'Missing URL'}
[19:48:43] INFO [test_active_url_missing_url] END
[19:48:43] INFO [test_profile] START
[19:48:43] INFO HTTP Request: GET http://testserver/profile "HTTP/1.1 200 OK"
[19:48:43] INFO [test_profile] Response status: 200, body: {'name': 'Gad Mohamed', 'profession': 'AI Engineer', 'favorite_color': 'Blue', 'spirit_animal': 'Owl'}
[19:48:43] INFO [test_profile] END
[19:48:43] INFO [testQueryEndpoint] START
[19:48:43] INFO [registerUser] Registering user: None
[19:48:44] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[19:48:44] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 441}
[19:48:44] INFO [loginUser] Logging in user: {'username': 'testuser_341dedce', 'password': 'testpass123'}
[19:48:45] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[19:48:45] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl8zNDFkZWRjZSIsImV4cCI6MTc0NjIzMzMyNX0.21PmQ5Wo9OiE5ekJ92-KrLWEGWAx_YxqtBgmzw5X0-g', 'token_type': 'bearer'}
[19:48:45] INFO [testQueryEndpoint] Case 1: Missing JSON body
[19:48:45] INFO HTTP Request: POST http://testserver/query "HTTP/1.1 400 Bad Request"
[19:48:45] INFO [testQueryEndpoint] Case 1 Response: 400, {"error":"Missing or invalid JSON body"}
[19:48:45] INFO [testQueryEndpoint] Case 2: Missing 'query' field
[19:48:46] INFO HTTP Request: POST http://testserver/query "HTTP/1.1 400 Bad Request"
[19:48:46] INFO [testQueryEndpoint] Case 2 Response: 400, {"error":"No query provided"}
[19:48:46] INFO [testQueryEndpoint] Case 3: Missing 'chatId' field
[19:48:46] INFO HTTP Request: POST http://testserver/query "HTTP/1.1 400 Bad Request"
[19:48:46] INFO [testQueryEndpoint] Case 3 Response: 400, {"error":"No chat ID provided"}
[19:48:46] INFO [testQueryEndpoint] Case 4: Valid request
[19:48:46] INFO [/query] POST request from testclient, headers: {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl8zNDFkZWRjZSIsImV4cCI6MTc0NjIzMzMyNX0.21PmQ5Wo9OiE5ekJ92-KrLWEGWAx_YxqtBgmzw5X0-g', 'content-type': 'application/json', 'content-length': '81'}
[19:48:46] INFO [/query] Payload: {'query': 'what does GAD refer to?', 'chatId': 'chat1', 'pageContent': 'Some content'}
[19:48:46] INFO [/query] Validation: query valid=True
[19:48:46] INFO Loading memory from directory: assets/441
[19:48:46] INFO [update_client] Called with client_dir=assets/441
[19:48:46] INFO [update_client] Paths set: CLIENT_DIR=assets/441, DATA_DIR=assets/441/data, LONG_TERM_MEMORY_FILE=assets/441/data/long_term_memory.json, SHORT_TERM_MEMORY_FILE=assets/441/data/short_term_memory.json, CONTEXT_FILE=assets/441/data/context.json
[19:48:46] INFO [update_client] Called with client_dir=assets/441
[19:48:46] INFO [update_client] Paths set: CLIENT_DIR=assets/441, DATA_DIR=assets/441/data, LONG_TERM_MEMORY_FILE=assets/441/data/long_term_memory.json, SHORT_TERM_MEMORY_FILE=assets/441/data/short_term_memory.json, CONTEXT_FILE=assets/441/data/context.json
[19:48:46] INFO [BaseMemoryManager.load] Loading memory_type=long-term
[19:48:46] INFO [load_memory] Requested memory_type=long-term
[19:48:46] INFO [load_memory] Using file: assets/441/data/long_term_memory.json
[19:48:46] INFO [load_memory] Loading from filepath=assets/441/data/long_term_memory.json
[19:48:46] INFO [load_memory] Loaded data from assets/441/data/long_term_memory.json (keys: [])
[19:48:46] INFO Successfully loaded long-term memory
[19:48:46] INFO [BaseMemoryManager.load] Loading memory_type=short-term
[19:48:46] INFO [load_memory] Requested memory_type=short-term
[19:48:46] INFO [load_memory] Using file: assets/441/data/short_term_memory.json
[19:48:46] INFO [load_memory] Loading from filepath=assets/441/data/short_term_memory.json
[19:48:46] INFO [load_memory] Loaded data from assets/441/data/short_term_memory.json (keys: [])
[19:48:46] INFO Successfully loaded short-term memory
[19:48:46] INFO Reading references from directory: assets/441/references
[19:48:46] INFO Processed 0 reference files with 0 total characters
[19:48:46] INFO Context messages: [{'role': 'user', 'content': 'what does GAD refer to?'}]
[19:48:46] INFO Sending query to OpenAI
[19:48:47] INFO HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[19:48:47] INFO Received response from OpenAI
[19:48:48] INFO HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[19:48:48] INFO Generated conversation summary (191 chars)
[19:48:48] INFO [BaseMemoryManager.load] Loading memory_type=short-term
[19:48:48] INFO [load_memory] Requested memory_type=short-term
[19:48:48] INFO [load_memory] Using file: assets/441/data/short_term_memory.json
[19:48:48] INFO [load_memory] Loading from filepath=assets/441/data/short_term_memory.json
[19:48:48] INFO [load_memory] Loaded data from assets/441/data/short_term_memory.json (keys: [])
[19:48:48] INFO Successfully loaded short-term memory
[19:48:48] INFO [BaseMemoryManager.save] Saving memory_type=short-term
[19:48:48] INFO [save_memory] Successfully saved memory to assets/441/data/short_term_memory.json
[19:48:48] INFO [/query] Responded with status 200: {'message': 'Query received', 'response': 'GAD typically refers to Generalized Anxiety Disorder, which is a mental health condition characterized by excessive and persistent worry and anxiety about various aspects of life.'}
[19:48:48] INFO HTTP Request: POST http://testserver/query "HTTP/1.1 200 OK"
[19:48:48] INFO [testQueryEndpoint] Case 4 Response: 200, {"userId":441,"username":"testuser_341dedce","query":"what does GAD refer to?","chatId":"chat1","pageContent":"Some content","message":"Query received","response":"GAD typically refers to Generalized Anxiety Disorder, which is a mental health condition characterized by excessive and persistent worry and anxiety about various aspects of life."}
[19:48:49] INFO HTTP Request: DELETE http://testserver/user/testuser_341dedce "HTTP/1.1 200 OK"
[19:48:49] INFO [testQueryEndpoint] END
[19:48:49] INFO [test_delete_user] START
[19:48:49] INFO [test_delete_user] Registering user: {'username': 'testuser_96f027bb', 'password': 'testpass123'}
[19:48:49] INFO [registerUser] Registering user: {'username': 'testuser_96f027bb', 'password': 'testpass123'}
[19:48:50] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[19:48:50] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 442}
[19:48:50] INFO [loginUser] Logging in user: {'username': 'testuser_96f027bb', 'password': 'testpass123'}
[19:48:51] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[19:48:51] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl85NmYwMjdiYiIsImV4cCI6MTc0NjIzMzMzMX0.KNkmgK4VsDRma8bZRJPfA9afY3K7BFgAP8TdQjbT8_E', 'token_type': 'bearer'}
[19:48:51] INFO [test_delete_user] Deleting user testuser_96f027bb (self-delete)
[19:48:51] INFO HTTP Request: DELETE http://testserver/user/testuser_96f027bb "HTTP/1.1 200 OK"
[19:48:51] INFO [test_delete_user] Delete response: 200, {"message":"User 'testuser_96f027bb' deleted successfully."}
[19:48:51] INFO [test_delete_user] Try deleting user testuser_96f027bb again (should be not found/unauthorized)
[19:48:52] INFO HTTP Request: DELETE http://testserver/user/testuser_96f027bb "HTTP/1.1 401 Unauthorized"
[19:48:52] INFO [test_delete_user] Second delete response: 401, {"detail":"Invalid credentials"}
[19:48:52] INFO [test_delete_user] Re-registering user testuser_96f027bb
[19:48:52] INFO [registerUser] Registering user: {'username': 'testuser_96f027bb', 'password': 'testpass123'}
[19:48:53] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[19:48:53] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 443}
[19:48:53] INFO [test_delete_user] Registering second user: {'username': 'testuser_4de5ffca', 'password': 'testpass123'}
[19:48:53] INFO [registerUser] Registering user: {'username': 'testuser_4de5ffca', 'password': 'testpass123'}
[19:48:54] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[19:48:54] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 444}
[19:48:54] INFO [loginUser] Logging in user: {'username': 'testuser_4de5ffca', 'password': 'testpass123'}
[19:48:54] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[19:48:54] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl80ZGU1ZmZjYSIsImV4cCI6MTc0NjIzMzMzNH0.sGcgRZBRwNtsA4VKHorSsmAVzzIuDOgd6rw-7CoX4Bs', 'token_type': 'bearer'}
[19:48:54] INFO [test_delete_user] Second user attempts to delete testuser_96f027bb
[19:48:54] INFO HTTP Request: DELETE http://testserver/user/testuser_96f027bb "HTTP/1.1 403 Forbidden"
[19:48:54] INFO [test_delete_user] Forbidden delete response: 403, {"detail":"You can only delete your own account."}
[19:48:54] INFO [test_delete_user] END
[19:48:54] INFO [test_list_files] START
[19:48:54] INFO [registerUser] Registering user: None
[19:48:55] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[19:48:55] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 445}
[19:48:55] INFO [loginUser] Logging in user: {'username': 'testuser_cf5ad4ae', 'password': 'testpass123'}
[19:48:56] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[19:48:56] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl9jZjVhZDRhZSIsImV4cCI6MTc0NjIzMzMzNn0.uc17aCVJFNchOyRQq5JbIxwyDb5UOXlCeRqCkDxN5qE', 'token_type': 'bearer'}
[19:48:56] INFO [test_list_files] Listing files
[19:48:56] INFO HTTP Request: GET http://testserver/files "HTTP/1.1 200 OK"
[19:48:56] INFO [test_list_files] Response status: 200, body: []
[19:48:56] INFO HTTP Request: DELETE http://testserver/user/testuser_cf5ad4ae "HTTP/1.1 200 OK"
[19:48:56] INFO [test_list_files] END
[19:48:56] INFO [test_download_file] START
[19:48:56] INFO [registerUser] Registering user: None
[19:48:57] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[19:48:57] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 446}
[19:48:57] INFO [loginUser] Logging in user: {'username': 'testuser_3c04de24', 'password': 'testpass123'}
[19:48:57] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[19:48:57] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl8zYzA0ZGUyNCIsImV4cCI6MTc0NjIzMzMzN30.aw-ypHz-YlMQoIvoKts8Lul0GHEa8k8HoXe9dtdBtzk', 'token_type': 'bearer'}
[19:48:57] INFO [test_download_file] Uploading file: testfile.txt
[19:48:57] INFO HTTP Request: POST http://testserver/upload "HTTP/1.1 200 OK"
[19:48:57] INFO [test_download_file] Downloading file: testfile.txt
[19:48:57] INFO HTTP Request: GET http://testserver/download/testfile.txt "HTTP/1.1 200 OK"
[19:48:57] INFO [test_download_file] Response status: 200, length: 11
[19:48:58] INFO HTTP Request: DELETE http://testserver/user/testuser_3c04de24 "HTTP/1.1 200 OK"
[19:48:58] INFO [test_download_file] END
[19:48:58] INFO [test_delete_file] START
[19:48:58] INFO [registerUser] Registering user: None
[19:48:58] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[19:48:58] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 447}
[19:48:58] INFO [loginUser] Logging in user: {'username': 'testuser_e1183b52', 'password': 'testpass123'}
[19:48:59] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[19:48:59] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl9lMTE4M2I1MiIsImV4cCI6MTc0NjIzMzMzOX0.RBKNgXc9FphF04lo_Dxna_MF0uXcmSjAWKmGMO-BizM', 'token_type': 'bearer'}
[19:48:59] INFO [test_delete_file] Uploading file: testfile.txt
[19:48:59] INFO HTTP Request: POST http://testserver/upload "HTTP/1.1 200 OK"
[19:48:59] INFO [test_delete_file] Deleting file: testfile.txt
[19:48:59] INFO HTTP Request: DELETE http://testserver/delete/testfile.txt "HTTP/1.1 200 OK"
[19:48:59] INFO [test_delete_file] Delete response: 200, {'message': "File 'testfile.txt' deleted successfully."}
[19:48:59] INFO HTTP Request: DELETE http://testserver/user/testuser_e1183b52 "HTTP/1.1 200 OK"
[19:49:00] INFO HTTP Request: GET http://testserver/files "HTTP/1.1 401 Unauthorized"
[19:49:00] INFO [test_delete_file] File list after delete: {'detail': 'Invalid credentials'}
[19:49:00] INFO [test_delete_file] END
