[11:41:23] INFO [TEST] Using TEST_DATABASE_URL: postgresql://postgres.otjjjagmwzswbinwxmfw:thothpassword@aws-0-us-east-1.pooler.supabase.com:6543/postgres
[11:41:24] INFO [test_upload_file] START
[11:41:24] INFO [registerUser] Registering user: None
[11:41:25] WARNING (trapped) error reading bcrypt version
Traceback (most recent call last):
  File "/Users/gadmohamed/Desktop/LMS/.venv/lib/python3.9/site-packages/passlib/handlers/bcrypt.py", line 620, in _load_backend_mixin
    version = _bcrypt.__about__.__version__
AttributeError: module 'bcrypt' has no attribute '__about__'
[11:41:25] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[11:41:25] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 360}
[11:41:25] INFO [loginUser] Logging in user: {'username': 'testuser_6a847009', 'password': 'testpass123'}
[11:41:26] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[11:41:26] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl82YTg0NzAwOSIsImV4cCI6MTc0NTM0MDA4Nn0.Vj6NBv8GiSdd5BBhjdwfhnJDsLphSrLv1nS_8srcPbQ', 'token_type': 'bearer'}
[11:41:26] INFO [test_upload_file] Uploading file: testfile.txt
[11:41:26] INFO HTTP Request: POST http://testserver/upload "HTTP/1.1 200 OK"
[11:41:26] INFO [test_upload_file] Response status: 200, body: {'filename': 'testfile.txt', 'size': 11}
[11:41:26] INFO [test_upload_file] END
[11:41:26] INFO HTTP Request: DELETE http://testserver/user/testuser_6a847009 "HTTP/1.1 200 OK"
[11:41:26] INFO [test_active_url_success] START
[11:41:26] INFO [test_active_url_success] Payload: {'url': 'https://example.com', 'title': 'Example Page'}
[11:41:26] INFO [/active_url] POST request from testclient, headers: {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '52', 'content-type': 'application/json'}
[11:41:26] INFO [/active_url] Payload: {'url': 'https://example.com', 'title': 'Example Page'}
[11:41:26] INFO [/active_url] Validation: url valid=True
[11:41:26] INFO [/active_url] Validation: title valid=True
[11:41:26] INFO [SERVER] Active URL: https://example.com
[11:41:26] INFO [SERVER] Page title: Example Page
[11:41:26] INFO [/active_url] Responded with status 200: {'data': {'status': 'success'}}
[11:41:26] INFO HTTP Request: POST http://testserver/active_url "HTTP/1.1 200 OK"
[11:41:26] INFO [test_active_url_success] Response status: 200, body: {'data': {'status': 'success'}}
[11:41:26] INFO [test_active_url_success] END
[11:41:26] INFO [test_active_url_missing_url] START
[11:41:26] INFO [test_active_url_missing_url] Payload: {'title': 'Example Page'}
[11:41:26] INFO [/active_url] POST request from testclient, headers: {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'content-length': '24', 'content-type': 'application/json'}
[11:41:26] INFO [/active_url] Payload: {'title': 'Example Page'}
[11:41:26] INFO [/active_url] Validation: url valid=False
[11:41:26] INFO [/active_url] Validation: title valid=True
[11:41:26] ERROR [/active_url] ERROR: Missing URL | Context: {'endpoint': '/active_url'}
[11:41:26] INFO HTTP Request: POST http://testserver/active_url "HTTP/1.1 400 Bad Request"
[11:41:26] INFO [test_active_url_missing_url] Response status: 400, body: {'error': 'Missing URL'}
[11:41:26] INFO [test_active_url_missing_url] END
[11:41:26] INFO [test_profile] START
[11:41:26] INFO HTTP Request: GET http://testserver/profile "HTTP/1.1 200 OK"
[11:41:26] INFO [test_profile] Response status: 200, body: {'name': 'Gad Mohamed', 'profession': 'AI Engineer', 'favorite_color': 'Blue', 'spirit_animal': 'Owl'}
[11:41:26] INFO [test_profile] END
[11:41:26] INFO [testQueryEndpoint] START
[11:41:26] INFO [registerUser] Registering user: None
[11:41:27] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[11:41:27] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 361}
[11:41:27] INFO [loginUser] Logging in user: {'username': 'testuser_5939840d', 'password': 'testpass123'}
[11:41:27] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[11:41:27] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl81OTM5ODQwZCIsImV4cCI6MTc0NTM0MDA4N30.LXSVkc2Dr34jK6wwbH2PqSSBaDKkRcUmsk_aPiXE3BY', 'token_type': 'bearer'}
[11:41:27] INFO [testQueryEndpoint] Case 1: Missing JSON body
[11:41:27] INFO HTTP Request: POST http://testserver/query "HTTP/1.1 400 Bad Request"
[11:41:27] INFO [testQueryEndpoint] Case 1 Response: 400, {"error":"Missing or invalid JSON body"}
[11:41:27] INFO [testQueryEndpoint] Case 2: Missing 'query' field
[11:41:27] INFO HTTP Request: POST http://testserver/query "HTTP/1.1 400 Bad Request"
[11:41:27] INFO [testQueryEndpoint] Case 2 Response: 400, {"error":"No query provided"}
[11:41:27] INFO [testQueryEndpoint] Case 3: Missing 'chatId' field
[11:41:28] INFO HTTP Request: POST http://testserver/query "HTTP/1.1 400 Bad Request"
[11:41:28] INFO [testQueryEndpoint] Case 3 Response: 400, {"error":"No chat ID provided"}
[11:41:28] INFO [testQueryEndpoint] Case 4: Valid request
[11:41:28] INFO [/query] POST request from testclient, headers: {'host': 'testserver', 'accept': '*/*', 'accept-encoding': 'gzip, deflate', 'connection': 'keep-alive', 'user-agent': 'testclient', 'authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl81OTM5ODQwZCIsImV4cCI6MTc0NTM0MDA4N30.LXSVkc2Dr34jK6wwbH2PqSSBaDKkRcUmsk_aPiXE3BY', 'content-type': 'application/json', 'content-length': '69'}
[11:41:28] INFO [/query] Payload: {'query': 'WHO IS GAD?', 'chatId': 'chat1', 'pageContent': 'Some content'}
[11:41:28] INFO [/query] Validation: query valid=True
[11:41:28] INFO Loading memory from directory: assets/361
[11:41:28] INFO [update_client] Called with client_dir=assets/361
[11:41:28] INFO [update_client] Paths set: CLIENT_DIR=assets/361, DATA_DIR=assets/361/data, LONG_TERM_MEMORY_FILE=assets/361/data/long_term_memory.json, SHORT_TERM_MEMORY_FILE=assets/361/data/short_term_memory.json, CONTEXT_FILE=assets/361/data/context.json
[11:41:28] INFO [update_client] Called with client_dir=assets/361
[11:41:28] INFO [update_client] Paths set: CLIENT_DIR=assets/361, DATA_DIR=assets/361/data, LONG_TERM_MEMORY_FILE=assets/361/data/long_term_memory.json, SHORT_TERM_MEMORY_FILE=assets/361/data/short_term_memory.json, CONTEXT_FILE=assets/361/data/context.json
[11:41:28] INFO [BaseMemoryManager.load] Loading memory_type=long-term
[11:41:28] INFO [load_memory] Requested memory_type=long-term
[11:41:28] INFO [load_memory] Using file: assets/361/data/long_term_memory.json
[11:41:28] INFO [load_memory] Loading from filepath=assets/361/data/long_term_memory.json
[11:41:28] INFO [load_memory] Loaded data from assets/361/data/long_term_memory.json (keys: [])
[11:41:28] INFO Successfully loaded long-term memory
[11:41:28] INFO [BaseMemoryManager.load] Loading memory_type=short-term
[11:41:28] INFO [load_memory] Requested memory_type=short-term
[11:41:28] INFO [load_memory] Using file: assets/361/data/short_term_memory.json
[11:41:28] INFO [load_memory] Loading from filepath=assets/361/data/short_term_memory.json
[11:41:28] INFO [load_memory] Loaded data from assets/361/data/short_term_memory.json (keys: [])
[11:41:28] INFO Successfully loaded short-term memory
[11:41:28] INFO Reading references from directory: assets/361/references
[11:41:28] INFO Processed 0 reference files with 0 total characters
[11:41:28] INFO Context messages: [{'role': 'user', 'content': 'WHO IS GAD?'}]
[11:41:28] INFO Sending query to OpenAI
[11:41:29] INFO HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[11:41:29] INFO Received response from OpenAI
[11:41:30] INFO HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
[11:41:30] INFO Generated conversation summary (157 chars)
[11:41:30] INFO [BaseMemoryManager.load] Loading memory_type=short-term
[11:41:30] INFO [load_memory] Requested memory_type=short-term
[11:41:30] INFO [load_memory] Using file: assets/361/data/short_term_memory.json
[11:41:30] INFO [load_memory] Loading from filepath=assets/361/data/short_term_memory.json
[11:41:30] INFO [load_memory] Loaded data from assets/361/data/short_term_memory.json (keys: [])
[11:41:30] INFO Successfully loaded short-term memory
[11:41:30] INFO [BaseMemoryManager.save] Saving memory_type=short-term
[11:41:30] INFO [save_memory] Successfully saved memory to assets/361/data/short_term_memory.json
[11:41:30] INFO [/query] Responded with status 200: {'message': 'Query received', 'response': 'Gad is a biblical figure who was one of the twelve sons of Jacob and the founder of the Israelite tribe of Gad. He is mentioned in the Old Testament of the Bible in the book of Genesis.'}
[11:41:30] INFO HTTP Request: POST http://testserver/query "HTTP/1.1 200 OK"
[11:41:30] INFO [testQueryEndpoint] Case 4 Response: 200, {"userId":361,"username":"testuser_5939840d","query":"WHO IS GAD?","chatId":"chat1","pageContent":"Some content","message":"Query received","response":"Gad is a biblical figure who was one of the twelve sons of Jacob and the founder of the Israelite tribe of Gad. He is mentioned in the Old Testament of the Bible in the book of Genesis."}
[11:41:30] INFO HTTP Request: DELETE http://testserver/user/testuser_5939840d "HTTP/1.1 200 OK"
[11:41:30] INFO [testQueryEndpoint] END
[11:41:30] INFO [test_delete_user] START
[11:41:30] INFO [test_delete_user] Registering user: {'username': 'testuser_0afadf9d', 'password': 'testpass123'}
[11:41:30] INFO [registerUser] Registering user: {'username': 'testuser_0afadf9d', 'password': 'testpass123'}
[11:41:31] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[11:41:31] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 362}
[11:41:31] INFO [loginUser] Logging in user: {'username': 'testuser_0afadf9d', 'password': 'testpass123'}
[11:41:32] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[11:41:32] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl8wYWZhZGY5ZCIsImV4cCI6MTc0NTM0MDA5Mn0.0aKhDvS3I_eG4ezomA8aLvjaNfiBpbyv70Qp-arJLbw', 'token_type': 'bearer'}
[11:41:32] INFO [test_delete_user] Deleting user testuser_0afadf9d (self-delete)
[11:41:32] INFO HTTP Request: DELETE http://testserver/user/testuser_0afadf9d "HTTP/1.1 200 OK"
[11:41:32] INFO [test_delete_user] Delete response: 200, {"message":"User 'testuser_0afadf9d' deleted successfully."}
[11:41:32] INFO [test_delete_user] Try deleting user testuser_0afadf9d again (should be not found/unauthorized)
[11:41:32] INFO HTTP Request: DELETE http://testserver/user/testuser_0afadf9d "HTTP/1.1 401 Unauthorized"
[11:41:32] INFO [test_delete_user] Second delete response: 401, {"detail":"Invalid credentials"}
[11:41:32] INFO [test_delete_user] Re-registering user testuser_0afadf9d
[11:41:32] INFO [registerUser] Registering user: {'username': 'testuser_0afadf9d', 'password': 'testpass123'}
[11:41:33] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[11:41:33] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 363}
[11:41:33] INFO [test_delete_user] Registering second user: {'username': 'testuser_0935ea98', 'password': 'testpass123'}
[11:41:33] INFO [registerUser] Registering user: {'username': 'testuser_0935ea98', 'password': 'testpass123'}
[11:41:34] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[11:41:34] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 364}
[11:41:34] INFO [loginUser] Logging in user: {'username': 'testuser_0935ea98', 'password': 'testpass123'}
[11:41:35] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[11:41:35] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl8wOTM1ZWE5OCIsImV4cCI6MTc0NTM0MDA5NX0.u8mse41l1jlwcDpXCcfx-2vvqMr4gXlrf-1SVoOVX_g', 'token_type': 'bearer'}
[11:41:35] INFO [test_delete_user] Second user attempts to delete testuser_0afadf9d
[11:41:35] INFO HTTP Request: DELETE http://testserver/user/testuser_0afadf9d "HTTP/1.1 403 Forbidden"
[11:41:35] INFO [test_delete_user] Forbidden delete response: 403, {"detail":"You can only delete your own account."}
[11:41:35] INFO [test_delete_user] END
[11:41:35] INFO [test_list_files] START
[11:41:35] INFO [registerUser] Registering user: None
[11:41:36] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[11:41:36] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 365}
[11:41:36] INFO [loginUser] Logging in user: {'username': 'testuser_827a2b76', 'password': 'testpass123'}
[11:41:36] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[11:41:36] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl84MjdhMmI3NiIsImV4cCI6MTc0NTM0MDA5Nn0.X-O72he8G_mI96ReusuCT4Tq1EDsdxW81VUyVIcTWnM', 'token_type': 'bearer'}
[11:41:36] INFO [test_list_files] Listing files
[11:41:36] INFO HTTP Request: GET http://testserver/files "HTTP/1.1 200 OK"
[11:41:36] INFO [test_list_files] Response status: 200, body: []
[11:41:37] INFO HTTP Request: DELETE http://testserver/user/testuser_827a2b76 "HTTP/1.1 200 OK"
[11:41:37] INFO [test_list_files] END
[11:41:37] INFO [test_download_file] START
[11:41:37] INFO [registerUser] Registering user: None
[11:41:37] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[11:41:37] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 366}
[11:41:37] INFO [loginUser] Logging in user: {'username': 'testuser_ad079c01', 'password': 'testpass123'}
[11:41:38] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[11:41:38] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl9hZDA3OWMwMSIsImV4cCI6MTc0NTM0MDA5OH0.kxnSCsWdLz4Fhx9DJt0WbGoM84qrJ_qzcb1fY-JpMDM', 'token_type': 'bearer'}
[11:41:38] INFO [test_download_file] Uploading file: testfile.txt
[11:41:38] INFO HTTP Request: POST http://testserver/upload "HTTP/1.1 200 OK"
[11:41:38] INFO [test_download_file] Downloading file: testfile.txt
[11:41:38] INFO HTTP Request: GET http://testserver/download/testfile.txt "HTTP/1.1 200 OK"
[11:41:38] INFO [test_download_file] Response status: 200, length: 11
[11:41:38] INFO HTTP Request: DELETE http://testserver/user/testuser_ad079c01 "HTTP/1.1 200 OK"
[11:41:38] INFO [test_download_file] END
[11:41:38] INFO [test_delete_file] START
[11:41:38] INFO [registerUser] Registering user: None
[11:41:39] INFO HTTP Request: POST http://testserver/register "HTTP/1.1 200 OK"
[11:41:39] INFO [registerUser] Response status: 200, body: {'message': 'Registered successfully', 'userId': 367}
[11:41:39] INFO [loginUser] Logging in user: {'username': 'testuser_1c5a7e5f', 'password': 'testpass123'}
[11:41:40] INFO HTTP Request: POST http://testserver/token "HTTP/1.1 200 OK"
[11:41:40] INFO [loginUser] Response status: 200, body: {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZXN0dXNlcl8xYzVhN2U1ZiIsImV4cCI6MTc0NTM0MDEwMH0.NLN63PwCbhwwTCgp6Pb8o_AWRipU82mdHu_aRRyzN74', 'token_type': 'bearer'}
[11:41:40] INFO [test_delete_file] Uploading file: testfile.txt
[11:41:40] INFO HTTP Request: POST http://testserver/upload "HTTP/1.1 200 OK"
[11:41:40] INFO [test_delete_file] Deleting file: testfile.txt
[11:41:40] INFO HTTP Request: DELETE http://testserver/delete/testfile.txt "HTTP/1.1 200 OK"
[11:41:40] INFO [test_delete_file] Delete response: 200, {'message': "File 'testfile.txt' deleted successfully."}
[11:41:40] INFO HTTP Request: DELETE http://testserver/user/testuser_1c5a7e5f "HTTP/1.1 200 OK"
[11:41:40] INFO HTTP Request: GET http://testserver/files "HTTP/1.1 401 Unauthorized"
[11:41:40] INFO [test_delete_file] File list after delete: {'detail': 'Invalid credentials'}
[11:41:40] INFO [test_delete_file] END
